C51 COMPILER V9.60.0.0   DEBUG                                                             05/06/2024 01:42:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN Debug.OBJ
COMPILER INVOKED BY: D:\PrgEnv\MDK\core\C51\BIN\C51.EXE Debug.C LARGE OPTIMIZE(8,SPEED) BROWSE NOAREGS DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : Debug.C
   3          * Author             : WCH
   4          * Version            : V1.6
   5          * Date               : 2021/12/15
   6          * Description        : CH554 DEBUG Interface
   7                               CH554‰∏ªÈ¢ë‰øÆÊîπ„ÄÅÂª∂Êó∂ÂáΩÊï∞ÂÆö‰πâ
   8                               ‰∏≤Âè£0Âíå‰∏≤Âè£1ÂàùÂßãÂåñ
   9                               ‰∏≤Âè£0Âíå‰∏≤Âè£1ÁöÑÊî∂ÂèëÂ≠êÂáΩÊï∞
  10                               ÁúãÈó®ÁãóÂàùÂßãÂåñ                    
  11          *********************************************************************************
  12          * Copyright (c) 2021 Nanjing Qinheng Microelectronics Co., Ltd.
  13          * Attention: This software (modified or not) and binary are used for 
  14          * microcontroller manufactured by Nanjing Qinheng Microelectronics.
  15          ********************************************************************************/
  16          
  17          #include "CH552.H"
  18          #include "Debug.H"
  19          
  20          /*******************************************************************************
  21          * Function Name  : CfgFsys( )
  22          * Description    : CH554Êó∂ÈíüÈÄâÊã©ÂíåÈÖçÁΩÆÂáΩÊï∞,ÈªòËÆ§‰ΩøÁî®Fsys 6MHzÔºåFREQ_SYSÂèØ‰ª•ÈÄöËøá
  23                             CLOCK_CFGÈÖçÁΩÆÂæóÂà∞ÔºåÂÖ¨ÂºèÂ¶Ç‰∏ãÔºö
  24                             Fsys = (Fosc * 4/(CLOCK_CFG & MASK_SYS_CK_SEL);ÂÖ∑‰ΩìÊó∂ÈíüÈúÄË¶ÅËá™Â∑±ÈÖçÁΩÆ 
  25          * Input          : None
  26          * Output         : None
  27          * Return         : None
  28          *******************************************************************************/ 
  29          void  CfgFsys( )  
  30          {
  31   1      #if OSC_EN_XT 
                  SAFE_MOD = 0x55;
                  SAFE_MOD = 0xAA;
                  CLOCK_CFG |= bOSC_EN_XT;                          //‰ΩøËÉΩÂ§ñÈÉ®Êô∂ÊåØ
                  mDelaymS(10);
                  SAFE_MOD = 0x55;
                  SAFE_MOD = 0xAA;
                  CLOCK_CFG &= ~bOSC_EN_INT;                        //ÂÖ≥Èó≠ÂÜÖÈÉ®Êô∂ÊåØ 
                  SAFE_MOD = 0x00;
              #endif  
  41   1          SAFE_MOD = 0x55;
  42   1          SAFE_MOD = 0xAA;
  43   1      #if FREQ_SYS == 24000000  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz 
              #endif  
  46   1      #if FREQ_SYS == 16000000    
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz 
              #endif
  49   1      #if FREQ_SYS == 12000000    
  50   1          CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  51   1      #endif  
  52   1      #if FREQ_SYS == 6000000   
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz  
              #endif  
C51 COMPILER V9.60.0.0   DEBUG                                                             05/06/2024 01:42:00 PAGE 2   

  55   1      #if FREQ_SYS == 3000000 
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz  
              #endif
  58   1      #if FREQ_SYS == 750000  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz
              #endif
  61   1      #if FREQ_SYS == 187500  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5KHz  
              #endif
  64   1          SAFE_MOD = 0x00;
  65   1      }
  66          
  67          /*******************************************************************************
  68          * Function Name  : mDelayus(UNIT16 n)
  69          * Description    : usÂª∂Êó∂ÂáΩÊï∞
  70          * Input          : UNIT16 n
  71          * Output         : None
  72          * Return         : None
  73          *******************************************************************************/ 
  74          void  mDelayuS( UINT16 n )  // ‰ª•uS‰∏∫Âçï‰ΩçÂª∂Êó∂
  75          {
  76   1      #ifdef  FREQ_SYS
  77   1      #if   FREQ_SYS <= 6000000
                  n >>= 2;
              #endif
  80   1      #if   FREQ_SYS <= 3000000
                  n >>= 2;
              #endif
  83   1      #if   FREQ_SYS <= 750000
                  n >>= 4;
              #endif
  86   1      #endif
  87   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  88   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  89   2      #ifdef  FREQ_SYS
  90   2      #if   FREQ_SYS >= 14000000
                  ++ SAFE_MOD;
              #endif
  93   2      #if   FREQ_SYS >= 16000000
                  ++ SAFE_MOD;
              #endif
  96   2      #if   FREQ_SYS >= 18000000
                  ++ SAFE_MOD;
              #endif
  99   2      #if   FREQ_SYS >= 20000000
                  ++ SAFE_MOD;
              #endif
 102   2      #if   FREQ_SYS >= 22000000
                  ++ SAFE_MOD;
              #endif
 105   2      #if   FREQ_SYS >= 24000000
                  ++ SAFE_MOD;
              #endif
 108   2      #endif
 109   2          -- n;
 110   2        }
 111   1      }
 112          
 113          /*******************************************************************************
 114          * Function Name  : mDelayms(UNIT16 n)
 115          * Description    : msÂª∂Êó∂ÂáΩÊï∞
 116          * Input          : UNIT16 n
C51 COMPILER V9.60.0.0   DEBUG                                                             05/06/2024 01:42:00 PAGE 3   

 117          * Output         : None
 118          * Return         : None
 119          *******************************************************************************/
 120          void  mDelaymS( UINT16 n )                                                  // ‰ª•mS‰∏∫Âçï‰ΩçÂª∂Êó∂
 121          {
 122   1        while ( n ) {
 123   2      #ifdef  DELAY_MS_HW
                  while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                  while ( TKEY_CTRL & bTKC_IF );
              #else
 127   2          mDelayuS( 1000 );
 128   2      #endif
 129   2          -- n;
 130   2        }
 131   1      }                                         
 132          
 133          /*******************************************************************************
 134          * Function Name  : CH554UART0Alter()
 135          * Description    : CH554‰∏≤Âè£0ÂºïËÑöÊò†Â∞Ñ,‰∏≤Âè£Êò†Â∞ÑÂà∞P1.2ÂíåP1.3
 136          * Input          : None
 137          * Output         : None
 138          * Return         : None
 139          *******************************************************************************/
 140          void CH554UART0Alter()
 141          {
 142   1          PIN_FUNC |= bUART0_PIN_X;                                                  //‰∏≤Âè£Êò†Â∞ÑÂà∞P1.2ÂíåP1.
             -3
 143   1      }
 144          
 145          /*******************************************************************************
 146          * Function Name  : mInitSTDIO()
 147          * Description    : CH554‰∏≤Âè£0ÂàùÂßãÂåñ,ÈªòËÆ§‰ΩøÁî®T1‰ΩúUART0ÁöÑÊ≥¢ÁâπÁéáÂèëÁîüÂô®,‰πüÂèØ‰ª•‰ΩøÁî®T2
 148                             ‰Ωú‰∏∫Ê≥¢ÁâπÁéáÂèëÁîüÂô®
 149          * Input          : None
 150          * Output         : None
 151          * Return         : None
 152          *******************************************************************************/
 153          void  mInitSTDIO( )
 154          {
 155   1          UINT32 x;
 156   1          UINT8 x2; 
 157   1      
 158   1          SM0 = 0;
 159   1          SM1 = 1;
 160   1          SM2 = 0;                                                                   //‰∏≤Âè£0‰ΩøÁî®Ê®°Âºè1
 161   1                                                                                     //‰ΩøÁî®Timer1‰Ωú‰∏∫Ê≥¢ÁâπÁ
             -éáÂèëÁîüÂô®
 162   1          RCLK = 0;                                                                  //UART0Êé•Êî∂Êó∂Èíü
 163   1          TCLK = 0;                                                                  //UART0ÂèëÈÄÅÊó∂Èíü
 164   1          PCON |= SMOD;
 165   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Â¶ÇÊûúÊõ¥Êîπ‰∏ªÈ¢ëÔºåÊ≥®Ê
             -ÑèxÁöÑÂÄº‰∏çË¶ÅÊ∫¢Âá∫                            
 166   1          x2 = x % 10;
 167   1          x /= 10;
 168   1          if ( x2 >= 5 ) x ++;                                                       //ÂõõËàç‰∫îÂÖ•
 169   1      
 170   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20ÔºåTimer1‰Ωú‰∏∫8‰ΩçËá
             -™Âä®ÈáçËΩΩÂÆöÊó∂Âô®
 171   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Êó∂ÈíüÈÄâÊã©
 172   1          TH1 = 0-x;                                                                 //12MHzÊô∂ÊåØ,buad/12‰∏∫ÂÆû
             -ÈôÖÈúÄËÆæÁΩÆÊ≥¢ÁâπÁéá
 173   1          TR1 = 1;                                                                   //ÂêØÂä®ÂÆöÊó∂Âô®1
C51 COMPILER V9.60.0.0   DEBUG                                                             05/06/2024 01:42:00 PAGE 4   

 174   1          TI = 1;
 175   1          REN = 1;                                                                   //‰∏≤Âè£0Êé•Êî∂‰ΩøËÉΩ
 176   1      }
 177          
 178          /*******************************************************************************
 179          * Function Name  : CH554UART0RcvByte()
 180          * Description    : CH554UART0Êé•Êî∂‰∏Ä‰∏™Â≠óËäÇ
 181          * Input          : None
 182          * Output         : None
 183          * Return         : SBUF
 184          *******************************************************************************/
 185          UINT8  CH554UART0RcvByte( )
 186          {
 187   1          while(RI == 0);                                                            //Êü•ËØ¢Êé•Êî∂Ôºå‰∏≠Êñ≠ÊñπÂ
             -ºèÂèØ‰∏çÁî®
 188   1          RI = 0;
 189   1          return SBUF;
 190   1      }
 191          
 192          /*******************************************************************************
 193          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 194          * Description    : CH554UART0ÂèëÈÄÅ‰∏Ä‰∏™Â≠óËäÇ
 195          * Input          : UINT8 SendDatÔºõË¶ÅÂèëÈÄÅÁöÑÊï∞ÊçÆ
 196          * Output         : None
 197          * Return         : None
 198          *******************************************************************************/
 199          void CH554UART0SendByte(UINT8 SendDat)
 200          {
 201   1        SBUF = SendDat;                                                              //Êü•ËØ¢ÂèëÈÄÅÔºå‰∏≠Êñ≠ÊñπÂº
             -èÂèØ‰∏çÁî®‰∏ãÈù¢2Êù°ËØ≠Âè•,‰ΩÜÂèëÈÄÅÂâçÈúÄTI=0
 202   1        while(TI ==0);
 203   1        TI = 0;
 204   1      }
 205          
 206          /*******************************************************************************
 207          * Function Name  : CH554WDTModeSelect(UINT8 mode)
 208          * Description    : CH554ÁúãÈó®ÁãóÊ®°ÂºèÈÄâÊã©
 209          * Input          : UINT8 mode 
 210                             0  timer
 211                             1  watchDog
 212          * Output         : None
 213          * Return         : None
 214          *******************************************************************************/
 215          void CH554WDTModeSelect(UINT8 mode)
 216          {
 217   1         SAFE_MOD = 0x55;
 218   1         SAFE_MOD = 0xaa;                                                             //ËøõÂÖ•ÂÆâÂÖ®Ê®°Âºè
 219   1         if(mode){
 220   2           GLOBAL_CFG |= bWDOG_EN;                                                    //ÂêØÂä®ÁúãÈó®ÁãóÂ§ç‰Ωç
 221   2         }
 222   1         else GLOBAL_CFG &= ~bWDOG_EN;                                              //ÂêØÂä®ÁúãÈó®Áãó‰ªÖ‰ªÖ‰Ωú‰∏∫
             -ÂÆöÊó∂Âô®
 223   1         SAFE_MOD = 0x00;                                                             //ÈÄÄÂá∫ÂÆâÂÖ®Ê®°Âºè
 224   1         WDOG_COUNT = 0;                                                              //ÁúãÈó®ÁãóËµãÂàùÂÄº
 225   1      }
 226          
 227          /*******************************************************************************
 228          * Function Name  : CH554WDTFeed(UINT8 tim)
 229          * Description    : CH554ÁúãÈó®ÁãóÂÆöÊó∂Êó∂Èó¥ËÆæÁΩÆ
 230          * Input          : UINT8 tim ÁúãÈó®ÁãóÂ§ç‰ΩçÊó∂Èó¥ËÆæÁΩÆ
 231                             00H(6MHz)=2.8s
 232                             80H(6MHz)=1.4s
C51 COMPILER V9.60.0.0   DEBUG                                                             05/06/2024 01:42:00 PAGE 5   

 233          * Output         : None
 234          * Return         : None
 235          *******************************************************************************/
 236          void CH554WDTFeed(UINT8 tim)
 237          {
 238   1         WDOG_COUNT = tim;                                                             //ÁúãÈó®ÁãóËÆ°Êï∞Âô®ËµãÂÄ
             -º  
 239   1      }
 240          
 241          // /*******************************************************************************
 242          // * Function Name  : CH554SoftReset()
 243          // * Description    : CH554ËΩØÂ§ç‰Ωç
 244          // * Input          : None
 245          // * Output         : None
 246          // * Return         : None
 247          // *******************************************************************************/
 248          // void CH554SoftReset( )
 249          // {
 250          //     SAFE_MOD = 0x55;
 251          //     SAFE_MOD = 0xAA;
 252          //     GLOBAL_CFG |=bSW_RESET;
 253          // }
 254          
 255          // /*******************************************************************************
 256          // * Function Name  : CH554USBDevWakeup()
 257          // * Description    : CH554ËÆæÂ§áÊ®°ÂºèÂî§ÈÜí‰∏ªÊú∫ÔºåÂèëÈÄÅK‰ø°Âè∑
 258          // * Input          : None
 259          // * Output         : None
 260          // * Return         : None
 261          // *******************************************************************************/
 262          // void CH554USBDevWakeup( )
 263          // {
 264          //#ifdef Fullspeed
 265          //  UDEV_CTRL |= bUD_LOW_SPEED;
 266          //  mDelaymS(2);
 267          //  UDEV_CTRL &= ~bUD_LOW_SPEED;    
 268          //#else
 269          //  UDEV_CTRL &= ~bUD_LOW_SPEED;
 270          //  mDelaymS(2);
 271          //  UDEV_CTRL |= bUD_LOW_SPEED; 
 272          //#endif  
 273          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
